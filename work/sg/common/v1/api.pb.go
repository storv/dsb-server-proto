// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: work/sg/common/v1/api.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package v1

import (
	fmt "fmt"
	_ "github.com/bilibili/kratos/tool/protobuf/pkg/extensions/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SgMessageType int32

const (
	SgMessageType_DMT_UNKNOWN SgMessageType = 0
	// 待处理
	SgMessageType_DMT_TBD SgMessageType = 1
	// 动态
	SgMessageType_DMT_TRENDS SgMessageType = 2
)

var SgMessageType_name = map[int32]string{
	0: "DMT_UNKNOWN",
	1: "DMT_TBD",
	2: "DMT_TRENDS",
}

var SgMessageType_value = map[string]int32{
	"DMT_UNKNOWN": 0,
	"DMT_TBD":     1,
	"DMT_TRENDS":  2,
}

func (x SgMessageType) String() string {
	return proto.EnumName(SgMessageType_name, int32(x))
}

func (SgMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_94955c5bcc4b00ce, []int{0}
}

// 消息类型
type SgEvent int32

const (
	SgEvent_SE_UNKNOWN SgEvent = 0
	// 添加协作者
	//（某用户被添加为协作者）
	SgEvent_SE_ADD_AS_COLL SgEvent = 1
	// 移除协作者
	//（协作者被移除协作身份）
	SgEvent_SE_DEL_AS_COLL SgEvent = 2
	// 权限修改
	//（协作者的协作权限被操作人修改）
	SgEvent_SE_CHG_PEM SgEvent = 3
	// 转让所有权
	//（所有者将文件的所有权转让给受让人）
	SgEvent_SE_TSF SgEvent = 4
	// 申请访问权限
	//（申请人申请访问文件（夹））
	SgEvent_SE_APP_AS_COLL SgEvent = 5
	// 评论提醒
	//（评论人在文档中发表了评论、@到了当前用户）
	SgEvent_SE_NT_CMENT SgEvent = 6
	// 修订提醒
	//（修订人在文档中进行了修订）
	SgEvent_SE_NT_REVISE SgEvent = 7
	// 文档因为含有违规内容被系统关闭公开分享
	SgEvent_SE_NT_COLSE_PUBLIC_SHARE SgEvent = 8
)

var SgEvent_name = map[int32]string{
	0: "SE_UNKNOWN",
	1: "SE_ADD_AS_COLL",
	2: "SE_DEL_AS_COLL",
	3: "SE_CHG_PEM",
	4: "SE_TSF",
	5: "SE_APP_AS_COLL",
	6: "SE_NT_CMENT",
	7: "SE_NT_REVISE",
	8: "SE_NT_COLSE_PUBLIC_SHARE",
}

var SgEvent_value = map[string]int32{
	"SE_UNKNOWN":               0,
	"SE_ADD_AS_COLL":           1,
	"SE_DEL_AS_COLL":           2,
	"SE_CHG_PEM":               3,
	"SE_TSF":                   4,
	"SE_APP_AS_COLL":           5,
	"SE_NT_CMENT":              6,
	"SE_NT_REVISE":             7,
	"SE_NT_COLSE_PUBLIC_SHARE": 8,
}

func (x SgEvent) String() string {
	return proto.EnumName(SgEvent_name, int32(x))
}

func (SgEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_94955c5bcc4b00ce, []int{1}
}

// 消息的权重登记
type SgMessagePriority int32

const (
	SgMessagePriority_SMP_UNKNOWN         SgMessagePriority = 0
	SgMessagePriority_SMP_VERY_LOW_VALUE  SgMessagePriority = 1
	SgMessagePriority_SMP_LOW_VALUE       SgMessagePriority = 2
	SgMessagePriority_SMP_NORMAL_VALUE    SgMessagePriority = 3
	SgMessagePriority_SMP_HIGH_VALUE      SgMessagePriority = 4
	SgMessagePriority_SMP_VERY_HIGH_VALUE SgMessagePriority = 5
)

var SgMessagePriority_name = map[int32]string{
	0: "SMP_UNKNOWN",
	1: "SMP_VERY_LOW_VALUE",
	2: "SMP_LOW_VALUE",
	3: "SMP_NORMAL_VALUE",
	4: "SMP_HIGH_VALUE",
	5: "SMP_VERY_HIGH_VALUE",
}

var SgMessagePriority_value = map[string]int32{
	"SMP_UNKNOWN":         0,
	"SMP_VERY_LOW_VALUE":  1,
	"SMP_LOW_VALUE":       2,
	"SMP_NORMAL_VALUE":    3,
	"SMP_HIGH_VALUE":      4,
	"SMP_VERY_HIGH_VALUE": 5,
}

func (x SgMessagePriority) String() string {
	return proto.EnumName(SgMessagePriority_name, int32(x))
}

func (SgMessagePriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_94955c5bcc4b00ce, []int{2}
}

// 消息定义
type SgMessage struct {
	// 消息类别
	Dmt SgMessageType `protobuf:"varint,1,opt,name=dmt,proto3,enum=work.sg.common.v1.SgMessageType" json:"dmt,omitempty"`
	// 自定义的消息体
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// 创建时间
	CreateAt int64 `protobuf:"varint,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// 过期时间
	ExpireAt int64 `protobuf:"varint,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	// 需要发送的时间
	SendAt int64 `protobuf:"varint,5,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
	// 通知登记
	Priority SgMessagePriority `protobuf:"varint,6,opt,name=priority,proto3,enum=work.sg.common.v1.SgMessagePriority" json:"priority,omitempty"`
	// 事件类别
	Event                SgEvent  `protobuf:"varint,7,opt,name=event,proto3,enum=work.sg.common.v1.SgEvent" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SgMessage) Reset()         { *m = SgMessage{} }
func (m *SgMessage) String() string { return proto.CompactTextString(m) }
func (*SgMessage) ProtoMessage()    {}
func (*SgMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_94955c5bcc4b00ce, []int{0}
}
func (m *SgMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SgMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SgMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SgMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SgMessage.Merge(m, src)
}
func (m *SgMessage) XXX_Size() int {
	return m.Size()
}
func (m *SgMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SgMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SgMessage proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("work.sg.common.v1.SgMessageType", SgMessageType_name, SgMessageType_value)
	proto.RegisterEnum("work.sg.common.v1.SgEvent", SgEvent_name, SgEvent_value)
	proto.RegisterEnum("work.sg.common.v1.SgMessagePriority", SgMessagePriority_name, SgMessagePriority_value)
	proto.RegisterType((*SgMessage)(nil), "work.sg.common.v1.SgMessage")
}

func init() { proto.RegisterFile("work/sg/common/v1/api.proto", fileDescriptor_94955c5bcc4b00ce) }

var fileDescriptor_94955c5bcc4b00ce = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xdf, 0x6e, 0xd3, 0x3c,
	0x18, 0xc6, 0xe7, 0xfe, 0xdd, 0xde, 0x7d, 0xdb, 0xe7, 0x99, 0x89, 0x45, 0xdb, 0x54, 0x55, 0x88,
	0x83, 0x69, 0xd2, 0x12, 0xb6, 0x1d, 0x23, 0x91, 0x35, 0x66, 0x9d, 0x48, 0xd2, 0x28, 0x49, 0x3b,
	0xc1, 0x89, 0x95, 0xae, 0x56, 0x88, 0xa0, 0x71, 0x95, 0x98, 0xc2, 0x6e, 0x83, 0x43, 0x2e, 0x83,
	0xab, 0xd8, 0x21, 0x97, 0x00, 0xbd, 0x12, 0xe4, 0x24, 0x94, 0xa2, 0x22, 0xce, 0xec, 0xdf, 0xef,
	0x79, 0xde, 0xbe, 0x6d, 0x65, 0x38, 0xfa, 0x28, 0xb2, 0x77, 0x46, 0x1e, 0x1b, 0x77, 0x62, 0x3a,
	0x15, 0xa9, 0x31, 0x3f, 0x37, 0xa2, 0x59, 0xa2, 0xcf, 0x32, 0x21, 0x05, 0xd9, 0x53, 0x52, 0xcf,
	0x63, 0xbd, 0x94, 0xfa, 0xfc, 0xfc, 0x70, 0x3f, 0x16, 0xb1, 0x28, 0xac, 0xa1, 0x4e, 0x65, 0xf0,
	0xf0, 0x38, 0x16, 0x22, 0x7e, 0xcf, 0x55, 0xd5, 0x88, 0xd2, 0x54, 0xc8, 0x48, 0x26, 0x22, 0xcd,
	0x4b, 0xfb, 0xe4, 0x4b, 0x0d, 0xb6, 0x82, 0xd8, 0xe1, 0x79, 0x1e, 0xc5, 0x9c, 0x5c, 0x40, 0x7d,
	0x32, 0x95, 0x1a, 0xea, 0xa2, 0x93, 0xdd, 0x8b, 0xae, 0xbe, 0xf6, 0x11, 0xfa, 0x32, 0x1a, 0xde,
	0xcf, 0xb8, 0xaf, 0xc2, 0x84, 0x40, 0x63, 0x12, 0xc9, 0x48, 0xab, 0x75, 0xd1, 0xc9, 0x96, 0x5f,
	0x9c, 0xc9, 0x11, 0x6c, 0xdd, 0x65, 0x3c, 0x92, 0x9c, 0x45, 0x52, 0xab, 0x77, 0xd1, 0x49, 0xdd,
	0xdf, 0x2c, 0x81, 0x29, 0x95, 0xe4, 0x9f, 0x66, 0x49, 0x56, 0xc8, 0x46, 0x29, 0x4b, 0x60, 0x4a,
	0x72, 0x00, 0xed, 0x9c, 0xa7, 0x13, 0xa5, 0x9a, 0x85, 0x6a, 0xa9, 0xab, 0x29, 0xc9, 0x0b, 0xd8,
	0x9c, 0x65, 0x89, 0xc8, 0x12, 0x79, 0xaf, 0xb5, 0x8a, 0xfd, 0x9e, 0xfe, 0x6b, 0x3f, 0xaf, 0xca,
	0xfa, 0xcb, 0x16, 0x79, 0x06, 0x4d, 0x3e, 0xe7, 0xa9, 0xd4, 0xda, 0x45, 0xfd, 0xf0, 0xaf, 0x75,
	0xaa, 0x12, 0x7e, 0x19, 0x3c, 0x7d, 0x0e, 0x3b, 0x7f, 0x7c, 0x61, 0xf2, 0x3f, 0x6c, 0x5b, 0x4e,
	0xc8, 0x86, 0xee, 0x2b, 0x77, 0x70, 0xeb, 0xe2, 0x0d, 0xb2, 0x0d, 0x6d, 0x05, 0xc2, 0x2b, 0x0b,
	0x23, 0xb2, 0x0b, 0x50, 0x5c, 0x7c, 0xea, 0x5a, 0x01, 0xae, 0x9d, 0x7e, 0x45, 0xd0, 0xae, 0x26,
	0x2a, 0x17, 0xd0, 0x95, 0x22, 0x81, 0xdd, 0x80, 0x32, 0xd3, 0xb2, 0x98, 0x19, 0xb0, 0xde, 0xc0,
	0xb6, 0x31, 0xaa, 0x98, 0x45, 0xed, 0x25, 0xab, 0x55, 0xbd, 0x5e, 0xff, 0x9a, 0x79, 0xd4, 0xc1,
	0x75, 0x02, 0xd0, 0x0a, 0x28, 0x0b, 0x83, 0x97, 0xb8, 0xf1, 0x6b, 0x86, 0xe7, 0x2d, 0xf3, 0x4d,
	0xb5, 0x61, 0x40, 0x99, 0x1b, 0xb2, 0x9e, 0x43, 0xdd, 0x10, 0xb7, 0x08, 0x86, 0xff, 0x4a, 0xe0,
	0xd3, 0xd1, 0x4d, 0x40, 0x71, 0x9b, 0x1c, 0x83, 0x56, 0x45, 0x06, 0x76, 0x40, 0x99, 0x37, 0xbc,
	0xb2, 0x6f, 0x7a, 0x2c, 0xe8, 0x9b, 0x3e, 0xc5, 0x9b, 0xa7, 0x9f, 0x11, 0xec, 0xad, 0xfd, 0x8a,
	0xc5, 0x58, 0xc7, 0x5b, 0xd9, 0xff, 0x31, 0x10, 0x05, 0x46, 0xd4, 0x7f, 0xcd, 0xec, 0xc1, 0x2d,
	0x1b, 0x99, 0xf6, 0x90, 0x62, 0x44, 0xf6, 0x60, 0x47, 0xf1, 0xdf, 0xa8, 0x46, 0xf6, 0x01, 0x2b,
	0xe4, 0x0e, 0x7c, 0xc7, 0xb4, 0x2b, 0x5a, 0x2f, 0x96, 0x77, 0x3c, 0xd6, 0xbf, 0xb9, 0xee, 0x57,
	0xac, 0x41, 0x0e, 0xe0, 0xd1, 0x72, 0xe8, 0x8a, 0x68, 0x5e, 0xd1, 0x87, 0x1f, 0x9d, 0x8d, 0x87,
	0x45, 0x07, 0x7d, 0x5b, 0x74, 0xd0, 0xf7, 0x45, 0x07, 0xbd, 0xb9, 0x8c, 0x13, 0xf9, 0xf6, 0xc3,
	0x58, 0xfd, 0x77, 0x46, 0x2e, 0x45, 0x36, 0x37, 0x26, 0xf9, 0xf8, 0x2c, 0xe7, 0xd9, 0x9c, 0x67,
	0x67, 0xe5, 0x1b, 0x58, 0x7b, 0x3d, 0xe3, 0x56, 0x21, 0x2e, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xa8, 0x4d, 0x0e, 0xcb, 0x59, 0x03, 0x00, 0x00,
}

func (m *SgMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SgMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Dmt != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Dmt))
	}
	if len(m.Data) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintApi(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.CreateAt))
	}
	if m.ExpireAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.ExpireAt))
	}
	if m.SendAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.SendAt))
	}
	if m.Priority != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Priority))
	}
	if m.Event != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintApi(dAtA, i, uint64(m.Event))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SgMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Dmt != 0 {
		n += 1 + sovApi(uint64(m.Dmt))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovApi(uint64(m.CreateAt))
	}
	if m.ExpireAt != 0 {
		n += 1 + sovApi(uint64(m.ExpireAt))
	}
	if m.SendAt != 0 {
		n += 1 + sovApi(uint64(m.SendAt))
	}
	if m.Priority != 0 {
		n += 1 + sovApi(uint64(m.Priority))
	}
	if m.Event != 0 {
		n += 1 + sovApi(uint64(m.Event))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SgMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SgMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SgMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dmt", wireType)
			}
			m.Dmt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Dmt |= SgMessageType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireAt", wireType)
			}
			m.ExpireAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpireAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendAt", wireType)
			}
			m.SendAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SendAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			m.Priority = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Priority |= SgMessagePriority(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			m.Event = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Event |= SgEvent(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthApi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowApi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipApi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthApi
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthApi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi   = fmt.Errorf("proto: integer overflow")
)
