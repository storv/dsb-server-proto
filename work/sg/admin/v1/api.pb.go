// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: work/sg/admin/v1/api.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/bilibili/kratos/tool/protobuf/pkg/extensions/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v1 "github.com/storv/dsb-server-proto/work/sg/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("work/sg/admin/v1/api.proto", fileDescriptor_13e0fa40c7ea69dc) }

var fileDescriptor_13e0fa40c7ea69dc = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x24, 0x0c, 0x0c, 0xe9, 0x66, 0x55, 0x20, 0x5c, 0x14, 0xa0, 0x7b, 0x6d, 0xb5, 0x7c, 0x41,
	0x69, 0x19, 0x59, 0xe8, 0xc6, 0xe6, 0x24, 0xc6, 0x58, 0x34, 0x7e, 0x26, 0xcf, 0x09, 0x62, 0xe5,
	0x17, 0xf8, 0xa9, 0x8e, 0x48, 0xfc, 0x00, 0x44, 0x0c, 0x7c, 0x06, 0xb2, 0x93, 0x20, 0xa8, 0x10,
	0x5b, 0xe2, 0xbb, 0xf3, 0xdd, 0xf9, 0x62, 0xfa, 0x00, 0xe5, 0x1d, 0x47, 0xc5, 0x45, 0x5e, 0x68,
	0xc3, 0xeb, 0x29, 0x17, 0x56, 0x33, 0x5b, 0x82, 0x03, 0x72, 0x90, 0x41, 0xc1, 0x50, 0xb1, 0x00,
	0x31, 0x94, 0x65, 0xad, 0x33, 0xc9, 0xea, 0x29, 0x1d, 0x2a, 0x50, 0x10, 0x38, 0xdc, 0x7f, 0xb5,
	0x74, 0x3a, 0x52, 0x00, 0x6a, 0x2d, 0x79, 0xf8, 0x4b, 0xab, 0x1b, 0x2e, 0x0b, 0xeb, 0x1e, 0x3b,
	0xf0, 0xa8, 0x03, 0x85, 0xd5, 0x5c, 0x18, 0x03, 0x4e, 0x38, 0x0d, 0x06, 0x7b, 0x69, 0x9f, 0x22,
	0x83, 0xa2, 0x80, 0xdf, 0x31, 0x66, 0x9f, 0x51, 0x3c, 0x58, 0x62, 0x3a, 0xf7, 0x29, 0xe6, 0x56,
	0x13, 0x8c, 0x07, 0x2b, 0x69, 0xf2, 0x4b, 0x89, 0x28, 0x94, 0x24, 0xc7, 0xcc, 0x8b, 0x7d, 0xce,
	0x56, 0xcc, 0xea, 0x29, 0x5b, 0xa9, 0x0e, 0xbd, 0x92, 0xf7, 0xf4, 0xe4, 0x7f, 0x02, 0xda, 0xf1,
	0xe9, 0xd3, 0xeb, 0xc7, 0xf3, 0xee, 0x68, 0x7c, 0xc8, 0x73, 0x4c, 0x27, 0xdf, 0x2f, 0x81, 0x3f,
	0x5c, 0xf2, 0x38, 0x5e, 0x39, 0xe1, 0x16, 0x6b, 0x2d, 0x8d, 0x23, 0xfb, 0xac, 0xad, 0xc3, 0xfa,
	0xae, 0xec, 0xc2, 0x77, 0xa5, 0xe3, 0x3f, 0xac, 0x16, 0x50, 0x99, 0x4e, 0x17, 0xcc, 0x68, 0x30,
	0x1b, 0x12, 0xb2, 0x65, 0xe6, 0x84, 0x3b, 0x5f, 0x6e, 0xde, 0x93, 0x9d, 0x4d, 0x93, 0x44, 0x2f,
	0x4d, 0x12, 0xbd, 0x35, 0x49, 0x74, 0x3d, 0x53, 0xda, 0xdd, 0x56, 0xa9, 0xbf, 0x8f, 0xa3, 0x83,
	0xb2, 0x0e, 0x2a, 0xbf, 0x85, 0x2c, 0x27, 0xed, 0x04, 0xdb, 0x0b, 0xa6, 0x7b, 0xe1, 0xfc, 0xec,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x92, 0x0a, 0xe1, 0xdc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DsbAdminApiClient is the client API for DsbAdminApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DsbAdminApiClient interface {
	SendMessage(ctx context.Context, in *v1.SgMessageReq, opts ...grpc.CallOption) (*v1.SgMessageResp, error)
	StatClient(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*v1.CountClientResp, error)
}

type dsbAdminApiClient struct {
	cc *grpc.ClientConn
}

func NewDsbAdminApiClient(cc *grpc.ClientConn) DsbAdminApiClient {
	return &dsbAdminApiClient{cc}
}

func (c *dsbAdminApiClient) SendMessage(ctx context.Context, in *v1.SgMessageReq, opts ...grpc.CallOption) (*v1.SgMessageResp, error) {
	out := new(v1.SgMessageResp)
	err := c.cc.Invoke(ctx, "/com.sg.admin.service.v1.DsbAdminApi/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dsbAdminApiClient) StatClient(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*v1.CountClientResp, error) {
	out := new(v1.CountClientResp)
	err := c.cc.Invoke(ctx, "/com.sg.admin.service.v1.DsbAdminApi/StatClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DsbAdminApiServer is the server API for DsbAdminApi service.
type DsbAdminApiServer interface {
	SendMessage(context.Context, *v1.SgMessageReq) (*v1.SgMessageResp, error)
	StatClient(context.Context, *empty.Empty) (*v1.CountClientResp, error)
}

func RegisterDsbAdminApiServer(s *grpc.Server, srv DsbAdminApiServer) {
	s.RegisterService(&_DsbAdminApi_serviceDesc, srv)
}

func _DsbAdminApi_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.SgMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DsbAdminApiServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.sg.admin.service.v1.DsbAdminApi/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DsbAdminApiServer).SendMessage(ctx, req.(*v1.SgMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DsbAdminApi_StatClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DsbAdminApiServer).StatClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.sg.admin.service.v1.DsbAdminApi/StatClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DsbAdminApiServer).StatClient(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DsbAdminApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.sg.admin.service.v1.DsbAdminApi",
	HandlerType: (*DsbAdminApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _DsbAdminApi_SendMessage_Handler,
		},
		{
			MethodName: "StatClient",
			Handler:    _DsbAdminApi_StatClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "work/sg/admin/v1/api.proto",
}
