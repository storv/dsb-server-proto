// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "gogoproto/gogo.proto";
//import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "work/sg/common/v1/api.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package com.sg.admin.service.v1;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ

option go_package = "gitlab.duoshengbu.com/be/dsb-server-proto/work/sg/admin/v1";
option (gogoproto.goproto_getters_all) = false;

service DsbAdminApi {
    rpc SendMessage (DsbAdminMessageReq) returns (DsbAdminMessageResp) {
        option (google.api.http) = {
            post:"/dsbAdmin/sendMessage"
        };
    }
}


message DsbAdminMessageReq {
    // 消息字节数组
    work.sg.common.v1.SgMessage message = 1 [(gogoproto.moretags) = 'validate:"required"'];
    // 用户ID
    repeated int64 user_id_list = 2;
}

message DsbAdminMessageSingleReq {
    // 消息字节数组
    work.sg.common.v1.SgMessage message = 1 [(gogoproto.moretags) = 'validate:"required"'];
    // 用户ID
    int64 user_id = 2;
}

message DsbAdminMessageResp {

    // 状态
    int64 status = 1 [(gogoproto.jsontag) = 'status'];

    // 发送的终端数
    int64 clients = 2 [(gogoproto.jsontag) = 'clients'];
}

